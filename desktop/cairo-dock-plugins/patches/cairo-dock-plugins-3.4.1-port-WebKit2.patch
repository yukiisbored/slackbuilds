--- cairo-dock-plugins-3.4.1/CMakeLists.txt.wk2	2017-04-01 03:09:09.171381809 +0900
+++ cairo-dock-plugins-3.4.1/CMakeLists.txt	2017-04-01 03:09:09.172381805 +0900
@@ -1391,7 +1391,7 @@
 set (with_weblets no)
 enable_if_not_defined (enable-weblets)
 if (enable-weblets)
-	set (WEBKIT_MODULE webkitgtk-3.0)
+	set (WEBKIT_MODULE webkit2gtk-4.0)
 	pkg_check_modules (WEBKIT ${WEBKIT_MODULE})
 	if (NOT WEBKIT_FOUND)
 		message (STATUS "Could not find ${WEBKIT_MODULE}; Cairo-Dock won't be built with Weblets applet.")
--- cairo-dock-plugins-3.4.1/weblets/src/applet-struct.h.wk2	2015-02-20 01:13:47.000000000 +0900
+++ cairo-dock-plugins-3.4.1/weblets/src/applet-struct.h	2017-04-01 03:09:09.172381805 +0900
@@ -28,7 +28,7 @@
 #include "config.h"
 #endif
 
-#include <webkit/webkit.h>
+#include <webkit2/webkit2.h>
 
 //\___________ structure containing the applet's configuration parameters.
 struct _AppletConfig {
--- cairo-dock-plugins-3.4.1/weblets/src/applet-widget.c.wk2	2015-02-20 01:13:47.000000000 +0900
+++ cairo-dock-plugins-3.4.1/weblets/src/applet-widget.c	2017-04-01 03:14:59.380001735 +0900
@@ -62,13 +62,19 @@
 	return gldi_dialog_new (&attr);
 }
 
-/* Will be called when loading of the page is finished*/
-void load_finished_cb(WebKitWebView *pWebKitView, WebKitWebFrame* widget
+/* Will be called when loading of the page is changed*/
+void load_changed_cb(WebKitWebView *pWebKitView, WebKitLoadEvent load_event
 , GldiModuleInstance *myApplet)
 {
-	cd_debug ("weblets : (re)load finished\n");
-	// update scrollbars status
-	show_hide_scrollbars(myApplet);
+	switch (load_event) {
+		case WEBKIT_LOAD_FINISHED:
+			cd_debug ("weblets : (re)load finished\n");
+			// update scrollbars status
+			show_hide_scrollbars(myApplet);
+			break;
+		default:
+			break;
+	}
 }
 
 /* Build the embedded widget */
@@ -80,8 +86,8 @@
 	myData.pWebKitView = WEBKIT_WEB_VIEW (webkit_web_view_new ());
 	gtk_container_add (GTK_CONTAINER (myData.pGtkMozEmbed), GTK_WIDGET (myData.pWebKitView));
 	g_signal_connect(G_OBJECT(myData.pWebKitView),
-		"load_finished",
-		G_CALLBACK (load_finished_cb),
+		"load-changed",
+		G_CALLBACK (load_changed_cb),
 		myApplet);
 	gtk_widget_show_all (myData.pGtkMozEmbed);
 				 					 
@@ -120,10 +126,14 @@
 			}
 		}
 		
-		webkit_web_view_open(WEBKIT_WEB_VIEW(myData.pWebKitView), myConfig.cURI_to_load?myConfig.cURI_to_load:"http://www.google.com");
+		webkit_web_view_load_uri(WEBKIT_WEB_VIEW(myData.pWebKitView), myConfig.cURI_to_load?myConfig.cURI_to_load:"http://www.google.com");
 	}
 	/* available since rev. 30985, from fev. 2008 */
-	webkit_web_view_set_transparent(myData.pWebKitView, myConfig.bIsTransparent);
+	{
+		GdkRGBA rgba = {0};
+		if (myConfig.bIsTransparent) rgba.alpha = 0.5;
+		webkit_web_view_set_background_color(myData.pWebKitView, &rgba);
+	}
 
 	return TRUE;
 }
